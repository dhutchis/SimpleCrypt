#include <stdlib.h>
#include <stdio.h>

void * memcpy ( void * destination, const void * source, size_t num );
size_t strlen ( const char * str );
time_t time ( time_t * timer );

// from [0,rand)
int myrand(int max) {
  return rand() % max;
}

void rand_permute_map(int* map, int maplen) {
  int total = myrand(100)+50;
  int i, j, j2, t;
  for (i = 0; i < total; i++) {
    j = myrand(maplen);
    j2 = myrand(maplen);
    t = map[j];
    map[j] = map[j2];
    map[j2] = t;
  }
}

// randomly permute
void do_permute(char* str)
{
  int i, len = strlen(str);
  int map[len];
  char strcpy[len];

  for (i = 0; i < len; i++)
    map[i] = i;

  rand_permute_map(map, len);

  (void)memcpy(strcpy, str, len);

  for (i = 0; i < len; i++)
    str[i] = strcpy[map[i]];

  for (i = 0; i < len; i++)
    printf("%3d:%3d %c %c\n",i,map[i],str[i], strcpy[i]);

}

void do_permute_multi(char** strarr, int numstr)
{
  int i;


  for (i = 0; i < numstr; i++) {
    //    printf("%s ",strarr[i]);
    do_permute(strarr[i]);
  }
  //printf("\n");
}

// free this
char* make_big_string(char** strarr, unsigned numstr) {
  unsigned i, j, outpos;
  unsigned len = 0;
  char* strout;
  for (i = 0; i < numstr; i++)
    len += strlen(strarr[i])+(i > 0 ? 1 : 0);
  strout = (char*)malloc(len*sizeof(char));
  for (i = j = outpos = 0; i < numstr; i++) {
    for (j = 0; j < strlen(strarr[i]); j++)
      strout[outpos++] = strarr[i][j];
    if (i != numstr-1)
      strout[outpos++] = ' ';
  }
  return strout;
}
int main(int argc, char** argv)
{
  //int i;
  char* big;
  //  srand(time(0));

  argc--;
  argv++;
  if (argc < 2) {
    printf("Usage: do_permute rand_seed strings...\n");
    exit(0);
  }
  srand(atoi(*argv));
  argc--;
  argv++;

  big = make_big_string(argv, argc);
  do_permute_multi(&big, 1);

  printf("%s",big);
  printf("\n");
  free(big);
  return 0;
}
